const { build } = require('vite');
const { getExtensionConfig } = require('./config');
const { ROLLUP_OPTIONS } = require('./constants');
const startDevServer = require('./server');
const manifestPlugin = require('./plugins/manifestPlugin');

async function _buildDevBundle(outputDir, extensionConfig) {
  await build({
    define: {
      'process.env.NODE_ENV': JSON.stringify(
        process.env.NODE_ENV || 'development'
      ),
    },
    build: {
      watch: {
        clearScreen: false,
        exclude: [
          'node_modules',
          'package.json',
          'package-lock.json',
          'app.json',
        ],
      },
      lib: {
        entry: extensionConfig?.file,
        name: extensionConfig?.output,
        formats: ['iife'],
        fileName: () => extensionConfig?.output,
      },
      rollupOptions: {
        ...ROLLUP_OPTIONS,
        plugins: [
          ...(ROLLUP_OPTIONS.plugins || []),
          manifestPlugin({ minify: false, extensionConfig }),
        ],
      },
      outDir: outputDir,
      emptyOutDir: true,
      minify: false,
    },
  });
}

async function startDevMode(config, outputDir, port, extension) {
  const extensionConfig = await getExtensionConfig(config, extension);
  await _buildDevBundle(outputDir, extensionConfig);
  startDevServer(outputDir, port, extensionConfig);
}

module.exports = {
  startDevMode,
};
